# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      NEXT_PUBLIC_BASE_URL: ${{secrets.NEXT_PUBLIC_BASE_URL}}
      KINDE_CLIENT_ID: ${{secrets.KINDE_CLIENT_ID}}
      KINDE_CLIENT_SECRET: ${{secrets.KINDE_CLIENT_SECRET}}
      KINDE_ISSUER_URL: ${{secrets.KINDE_ISSUER_URL}}
      KINDE_SITE_URL: ${{secrets.KINDE_SITE_URL}}
      KINDE_POST_LOGOUT_REDIRECT_URL: ${{secrets.KINDE_POST_LOGOUT_REDIRECT_URL}}
      KINDE_POST_LOGIN_REDIRECT_URL: ${{secrets.KINDE_POST_LOGIN_REDIRECT_URL}}
      RAZOR_API_ID: ${{secrets.RAZOR_API_ID}}
      RAZOR_API_SECRET: ${{secrets.RAZOR_API_SECRET}}
      WH_SECRET: ${{secrets.WH_SECRET}}

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 10
          run_install: |
            - recursive: true
              args: [--frozen-lockfile, --strict-peer-dependencies]
            - args: [--global, gulp, prettier, typescript]

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile --strict-peer-dependencies

      - run: pnpm lint
      - run: pnpm build
